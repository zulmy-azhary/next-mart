// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id         String      @id @default(cuid())
  name       String
  userId     String
  billboards Billboard[] @relation(name: "StoreToBillboard")
  categories Category[]  @relation(name: "StoreToCategory")
  sizes      Size[]      @relation(name: "StoreToSize")
  colors     Color[]     @relation(name: "StoreToColor")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Billboard {
  id         String     @id @default(cuid())
  storeId    String
  store      Store      @relation(name: "StoreToBillboard", fields: [storeId], references: [id], onDelete: Cascade)
  label      String
  imageUrl   String
  categories Category[] @relation(name: "BillboardToCategory")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category {
  id          String    @id @default(cuid())
  storeId     String
  store       Store     @relation(name: "StoreToCategory", fields: [storeId], references: [id], onDelete: Cascade)
  billboardId String
  billboard   Billboard @relation(name: "BillboardToCategory", fields: [billboardId], references: [id], onDelete: Cascade)
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Size {
  id        String   @id @default(cuid())
  storeId   String
  store     Store    @relation(name: "StoreToSize", fields: [storeId], references: [id], onDelete: Cascade)
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id        String   @id @default(cuid())
  storeId   String
  store     Store    @relation(name: "StoreToColor", fields: [storeId], references: [id], onDelete: Cascade)
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
